{"version":3,"sources":["redux/actions.js","redux/reducer.js","components/User.js","components/Comment.js","components/CommentHandler.js","components/CommentList.js","components/Post.js","components/PostHandler.js","components/PostList.js","components/PostListHandler.js","App.js","index.js"],"names":["LOAD","DISPLAY","REMOVE_ARTICLE","REMOVE_COMMENT","load","dispatch","loadUrl","url","fetch","then","response","json","data","type","Promise","all","_ref","_ref2","Object","slicedToArray","posts","users","comments","articles","map","post","objectSpread","user","find","id","userId","filter","commentItem","postId","display","initialState","requested","getNextState","state","arguments","length","undefined","action","User","props","react_default","a","createElement","Fragment","author","name","email","className","address","street","suite","city","Comment","onClick","removeComment","postIndex","commentIndex","body","CommentHandler","connect","ownProps","comment","article","CommentList","components_CommentHandler","key","Post","removeArticle","index","title","components_User","text","components_CommentList","PostHandler","item","PostList","components_PostHandler","PostListHandler","store","createStore","applyMiddleware","thunk","App","es","components_PostListHandler","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c0f14921.chunk.js","sourcesContent":["export const LOAD = 'load';\nexport const DISPLAY = 'display';\nexport const REMOVE_ARTICLE = 'remove_article';\nexport const REMOVE_COMMENT = 'remove_comment';\n\nexport function load() {\n  return (dispatch) => {\n    dispatch({\n      type: LOAD,\n    });\n\n    function loadUrl(url) {\n      return fetch(url)\n        .then(response => response.json())\n        .then(data => data);\n    }\n\n    Promise.all([\n      loadUrl('https://jsonplaceholder.typicode.com/posts'),\n      loadUrl('https://jsonplaceholder.typicode.com/users'),\n      loadUrl('https://jsonplaceholder.typicode.com/comments'),\n    ])\n      .then(([posts, users, comments]) => {\n        const articles = posts.map((post) => ({\n          ...post,\n          user: users.find(user => user.id === post.userId),\n          comments: comments\n            .filter(commentItem => commentItem.postId === post.id),\n        }))\n        dispatch(display(articles));\n      });\n  };\n}\n\nexport function display(articles) {\n  return {\n    type: DISPLAY,\n    articles,\n  };\n}\n\nexport function removeArticle(articles, index) {\n  return {\n    type: REMOVE_ARTICLE,\n    articles: articles.filter(item => item.id !== index),\n  };\n}\n\nexport function removeComment(articles, postIndex, commentIndex) {\n  return {\n    type: REMOVE_COMMENT,\n    articles: articles.map((article) => {\n      if (article.id !== postIndex) {\n        return article;\n      }\n      return {\n        ...article,\n        comments: article.comments.filter(comment => comment.id !== commentIndex),\n      };\n    }),\n  };\n}\n","import {\n  LOAD,\n  DISPLAY,\n  REMOVE_ARTICLE,\n  REMOVE_COMMENT,\n} from './actions';\n\nconst initialState = {\n  requested: false,\n  articles: null,\n};\n\nfunction getNextState(state = initialState, action) {\n  switch (action.type) {\n    case LOAD:\n      return {\n        ...state,\n        requested: true,\n      };\n    case DISPLAY:\n      return {\n        ...state,\n        articles: action.articles,\n      };\n    case REMOVE_ARTICLE:\n      return {\n        ...state,\n        articles: action.articles,\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        articles: action.articles,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default getNextState;\n","import React from 'react';\n\nfunction User(props) {\n  return (\n    <React.Fragment>\n      <h4>\n        <i>{props.author.name}</i> <i>{props.author.email}</i>\n      </h4>\n      <div className=\"address\">\n        <i>{props.author.address.street}</i>\n        <i>{props.author.address.suite}</i>\n        <i>{props.author.address.city}</i>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default User\n","import React from 'react';\n\nfunction Comment(props) {\n  return (\n    <div>\n      <div className=\"removeComment\" onClick={() => props.removeComment(props.articles, props.postIndex, props.commentIndex)}>x</div>\n      <cite><h4>{props.name} </h4>{props.email}</cite>\n      <blockquote>{props.body}</blockquote>\n    </div>\n  );\n}\n\nexport default Comment;\n","import { connect } from 'react-redux';\nimport { removeComment } from '../redux/actions';\nimport Comment from './Comment';\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    name: ownProps.comment.name,\n    email: ownProps.comment.email,\n    body: ownProps.comment.body,\n    articles: state.articles,\n    commentIndex: ownProps.comment.id,\n    postIndex: ownProps.postIndex,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeComment: (articles, postIndex, commentIndex) => dispatch(removeComment(articles, postIndex, commentIndex)),\n  };\n}\n\nconst CommentHandler = connect(mapStateToProps, mapDispatchToProps)(Comment);\n\nexport default CommentHandler;\n","import React from 'react';\nimport CommentHandler from './CommentHandler';\n\nfunction CommentList(props) {\n  return (\n    <div className=\"comments\">\n      {props.comments.map(commentItem =>\n        <CommentHandler comment={commentItem} postIndex={props.postIndex} key={commentItem.id} />)\n      }\n    </div>\n  );\n}\n\nexport default CommentList;\n","import React from 'react';\nimport User from './User';\nimport CommentList from './CommentList';\n\nfunction Post(props) {\n  return (\n    <React.Fragment>\n      <article>\n        <div className=\"removeArticle\" onClick={() => props.removeArticle(props.articles, props.index)}>x</div>\n        <div className=\"article\">\n          <h2>{props.title}</h2>\n          <User author={props.author} />\n          <p>{props.text}</p>\n        </div>\n        <CommentList comments={props.comments} postIndex={props.index}/>\n      </article>\n    </React.Fragment>\n\n  );\n}\n\nexport default Post;\n","import { connect } from 'react-redux';\nimport { removeArticle } from '../redux/actions';\nimport Post from './Post';\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    articles: state.articles,\n    title: ownProps.article.title,\n    text: ownProps.article.body,\n    author: ownProps.article.user,\n    comments: ownProps.article.comments,\n    index: ownProps.article.id,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeArticle: (articles, index) => dispatch(removeArticle(articles, index)),\n  };\n}\n\nconst PostHandler = connect(mapStateToProps, mapDispatchToProps)(Post);\n\nexport default PostHandler;\n","import React from 'react';\nimport PostHandler from './PostHandler';\nimport './envelope.css';\nimport './PostList.css';\n\nfunction PostList(props) {\n  if (!props.requested) {\n    return (\n      <section className=\"circle\">\n        <div className=\"envelope\" onClick={props.load} />\n      </section>\n    );\n  }\n  if (props.articles === null) {\n    return <span className=\"loading\">Loading...</span>;\n  }\n  return props.articles.map(item => <PostHandler article={item} key={item.id}/>);\n}\n\nexport default PostList;\n","import { connect } from 'react-redux';\nimport PostList from './PostList';\nimport { load } from '../redux/actions';\n\nfunction mapStateToProps(state) {\n  return {\n    articles: state.articles,\n    requested: state.requested,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    load: () => dispatch(load()),\n  };\n}\n\nconst PostListHandler = connect(mapStateToProps, mapDispatchToProps)(PostList);\n\nexport default PostListHandler;\n","import React from 'react';\nimport { applyMiddleware, createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport getNextState from './redux/reducer';\nimport PostListHandler from './components/PostListHandler';\n\nconst store = createStore(getNextState, applyMiddleware(thunk));\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PostListHandler />\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}